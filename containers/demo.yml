version: '2'
services:
  varnish:
    build:
      context: ..
      dockerfile: containers/varnish/Dockerfile
    command: |
      bash -c '\
      varnishd -f /etc/varnish/production.vcl -s malloc,100M -a 0.0.0.0:80 \
      && varnishlog \
      '
    ports:
      - 8000:80
  nginx:
    build:
      context: ..
      dockerfile: containers/nginx/Dockerfile
  web1:
    build:
      context: ..
      dockerfile: containers/web/Dockerfile
    command: |
      bash -c '\
      sleep 4 \
      && ./manage.py migrate --noinput --settings=web.settings.demo \
      && ./manage.py shell --settings=web.settings.demo < create_admin \
      && ./manage.py dbshell --settings=web.settings.demo < create_app \
      && ./manage.py runserver --insecure 0.0.0.0:80 --settings=web.settings.demo \
      '
  web2:
    build:
      context: ..
      dockerfile: containers/web/Dockerfile
    command: |
      bash -c '\
      sleep 4 \
      && ./manage.py runserver --insecure 0.0.0.0:80 --settings=web.settings.demo \
      '
  web3:
    build:
      context: ..
      dockerfile: containers/web/Dockerfile
    command: |
      bash -c '\
      sleep 4 \
      && ./manage.py runserver --insecure 0.0.0.0:80 --settings=web.settings.demo \
      '
  postgres:
    build:
      context: ..
      dockerfile: containers/postgres/Dockerfile
    environment:
      POSTGRES_USER: PlanIt
      POSTGRES_PASSWORD: PlanIt
  worker:
    build:
      context: ..
      dockerfile: containers/worker/Dockerfile
    command: |
      bash -c '\
      ./manage.py migrate && ./manage.py runserver 0.0.0.0:80 \
      '
  memcached1:
    build:
      context: ..
      dockerfile: containers/memcached/Dockerfile
  memcached2:
    build:
      context: ..
      dockerfile: containers/memcached/Dockerfile
